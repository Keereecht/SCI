import os
import gspread
import pandas as pd
from google.oauth2.service_account import Credentials
from tkinter import messagebox
import data_storage

def readapikey():
    """ ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ database_value ‡πÅ‡∏•‡∏∞ filesheet ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Config.text """
    global database_value, filesheet
    with open('Config/Config.text', 'r', encoding='utf-8') as file:
        lines = file.readlines()

    database_value, filesheet = None, None
    for line in lines:
        line = line.strip()
        if line.startswith('database'):
            database_value = line.split(',')[1].strip('"')
        elif line.startswith('filesheetname'):
            filesheet = line.split(',')[1].strip('"')

def load_csv_data():
    """ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Customer.csv ‡πÄ‡∏Ç‡πâ‡∏≤ data_storage """
    global csv_file_path
    csv_file_path = os.path.join(data_storage.Main_folder, "customer_config", "Customer.csv")

    if not os.path.exists(csv_file_path):
        messagebox.showerror("Error", f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV: {csv_file_path}")
        return

    try:
        if 'customer_data' not in data_storage.__dict__:
            data_storage.customer_data = pd.read_csv(csv_file_path)
    except pd.errors.EmptyDataError:
        messagebox.showerror("Error", "CSV file is empty!")
    except pd.errors.ParserError:
        messagebox.showerror("Error", "CSV file format is incorrect!")

def get_listemail_data():
    """ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå A ‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ï 'listemail' ‡πÉ‡∏ô Google Sheets """
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = Credentials.from_service_account_file(database_value, scopes=scope)
    client = gspread.authorize(creds)

    try:
        sheet = client.open(filesheet).worksheet("listemail")
        return sheet.col_values(1)[1:]  # ‡∏ï‡∏±‡∏î Header ‡∏≠‡∏≠‡∏Å
    except gspread.exceptions.WorksheetNotFound:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏µ‡∏ï 'listemail'")
        return []

# def sync_customer_with_listemail():
#     """ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Customer.csv ‡∏Å‡∏±‡∏ö listemail ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢ """
#     readapikey()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ database_value ‡πÅ‡∏•‡∏∞ filesheet
#     load_csv_data()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV

#     if not hasattr(data_storage, 'customer_data'):
#         messagebox.showerror("Error", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å CSV ‡πÑ‡∏î‡πâ!")
#         return

#     csv_customers = data_storage.customer_data['Customer_name'].dropna().astype(str).tolist()
#     listemail_customers = get_listemail_data()

#     # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
#     csv_customers_lower = {name.lower(): name for name in csv_customers}
#     listemail_customers_lower = {name.lower() for name in listemail_customers}

#     # ‡∏´‡∏≤ Customer ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô CSV ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô listemail ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "TEST_PRODUCT"
#     missing_customers = [
#         csv_customers_lower[name] for name in csv_customers_lower
#         if name not in listemail_customers_lower and name.lower() != "test_product"
#     ]

#     if missing_customers:
#         print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡∏•‡∏á‡πÉ‡∏ô listemail...")
#         scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
#         creds = Credentials.from_service_account_file(database_value, scopes=scope)
#         client = gspread.authorize(creds)

#         sheet = client.open(filesheet).worksheet("listemail")
#         for name in missing_customers:
#             sheet.append_row([name])
#             print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° '{name}' ‡∏•‡∏á‡πÉ‡∏ô listemail")

#         messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‡πÄ‡∏û‡∏¥‡πà‡∏° {len(missing_customers)} ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô listemail ‡πÅ‡∏•‡πâ‡∏ß!")
#     else:
#         messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï")
def sync_customer_with_listemail():
    """ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Customer.csv ‡∏Å‡∏±‡∏ö listemail ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢ """
    readapikey()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ database_value ‡πÅ‡∏•‡∏∞ filesheet
    load_csv_data()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV

    if not hasattr(data_storage, 'customer_data'):
        messagebox.showerror("Error", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å CSV ‡πÑ‡∏î‡πâ!")
        return

    csv_customers = data_storage.customer_data['Customer_name'].dropna().astype(str).tolist()
    listemail_customers = get_listemail_data()

    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
    csv_customers_lower = {name.lower(): name for name in csv_customers}
    listemail_customers_lower = {name.lower() for name in listemail_customers}

    # ‡∏´‡∏≤ Customer ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô CSV ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô listemail ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "TEST_PRODUCT"
    missing_customers = [
        csv_customers_lower[name] for name in csv_customers_lower
        if name not in listemail_customers_lower and name.lower() != "test_product"
    ]

    # ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå B
    email_list = "Anusit.B@sanmina.com, putamongkol@gmail.com, keereechlit@gmail.com, netsara.w@sanmina.com, nichaya.th@sanmina.com, sawanee.s@sanmina.com, tassanee.j@sanmina.com, wijit.s@sanmina.com"
    if missing_customers:
        print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡∏•‡∏á‡πÉ‡∏ô listemail...")
        scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
        creds = Credentials.from_service_account_file(database_value, scopes=scope)
        client = gspread.authorize(creds)

        sheet = client.open(filesheet).worksheet("listemail")
        for name in missing_customers:
            sheet.append_row([name, email_list])  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå A ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå B
            print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° '{name}' ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏•‡∏á‡πÉ‡∏ô listemail")

# üîπ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
# sync_customer_with_listemail()

